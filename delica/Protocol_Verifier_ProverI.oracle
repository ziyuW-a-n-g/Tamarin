#!/usr/bin/python

import re
import os
import sys
debug = True

lines = sys.stdin.readlines()
lemma = sys.argv[1]

# INPUT:
# - lines contain a list of "%i:goal" where "%i" is the index of the goal
# - lemma contain the name of the lemma under scrutiny
# OUTPUT:
# - (on stdout) a list of ordered index separated by EOL


rank = []             # list of list of goals, main list is ordered by priority
maxPrio = 110
for i in range(0,maxPrio):
  rank.append([])

# SOURCES AND REUSE LEMMAS

if lemma == "executability" or \
   lemma == "Aliveness_Verifier_ProverI" or \
   lemma == "Weak_agree_Verifier_ProverI" or \
   lemma == "Noninjective_agree_Ti_Verifier_ProverI" or \
   lemma == "Injective_agree_Ti_Verifier_ProverI" or \
   lemma == "Noninjective_agree_pidi_Verifier_ProverI" or \
   lemma == "Noninjective_agree_repi_Verifier_ProverI":
  for line in lines:
    num = line.split(':')[0]
    if re.match('.*Commit\(.*', line): rank[90].append(num)
    elif re.match('.*St.*', line): rank[90].append(num)
    elif re.match('.*!KU\( hash.*', line): rank[95].append(num)
    elif re.match('.*!Ltk.*', line): rank[95].append(num)
    elif re.match('.*!KU\( ~k.*', line): rank[95].append(num)
    elif re.match('.*sign.*', line): rank[88].append(num)

else:
  exit(0)

# Ordering all goals by ranking (higher first)
for listGoals in reversed(rank):
  for goal in listGoals:
    sys.stderr.write(goal)
    print (goal)